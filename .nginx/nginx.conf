worker_processes 4;

events {
    worker_connections 1024;
}

http {
    # Define cache directory and cache settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m;
    large_client_header_buffers 8 64k;

    server {
        listen 80;
        root /usr/share/nginx/html/server/app;
        include /etc/nginx/mime.types;

        # Serve static assets from the _next/static directory
        location /_next/static/ {
            alias /usr/share/nginx/html/static/;
            proxy_cache my_cache;
            proxy_cache_valid 200 60m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            try_files $uri $uri/ =404;
        }

        # Serve other static assets (e.g., images, fonts, etc.) from the assets directory
        location /assets/ {
            alias /usr/share/nginx/html/assets/;
            proxy_cache my_cache;
            proxy_cache_valid 200 60m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            try_files $uri $uri/ =404;
        }

        # Cache settings for the root location
        location / {
            proxy_cache my_cache;
            proxy_cache_valid 200 60m;  # Cache successful responses for 60 minutes
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            try_files $uri $uri.html $uri/ =404;
        }

        location @nextjs {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html/server/pages;
        }

        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html/server/pages;
        }
    }
}
